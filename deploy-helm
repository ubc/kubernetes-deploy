#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

export DEPLOY_ROOT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

source "$DEPLOY_ROOT_DIR/src/common.bash"

if [[ -z "$CI_ENVIRONMENT_URL" ]]; then
  echo "Reading CI_ENVIRONMENT_URL from .gitlab-ci.yml..."
  CI_ENVIRONMENT_URL="$(ruby -ryaml -e 'puts YAML.load_file(".gitlab-ci.yml")[ENV["CI_BUILD_NAME"]]["environment"]["url"]')"
  CI_ENVIRONMENT_URL="$(eval echo "$CI_ENVIRONMENT_URL")"
  echo "CI_ENVIRONMENT_URL: $CI_ENVIRONMENT_URL"
fi

ensure_deploy_variables
create_kubeconfig

CI_ENVIRONMENT_HOSTNAME="${CI_ENVIRONMENT_URL}"
CI_ENVIRONMENT_HOSTNAME="${CI_ENVIRONMENT_HOSTNAME/https:\/\//}"
export CI_ENVIRONMENT_HOSTNAME="${CI_ENVIRONMENT_HOSTNAME/http:\/\//}"

cat <<EOF | kubectl apply -f -
kind: Namespace
apiVersion: v1
metadata:
  name: $KUBE_NAMESPACE
EOF

if [[ "$DEPLOYMENT_MANIFEST" ]]; then
  # update helm repo first to get latest changes
  helm repo update

  VALUE_OPTION=""
  if [[ "$DEPLOYMENT_VALUE_FILE" ]]; then
    # if it is a remote file, grab the file first
    if [[ "$DEPLOYMENT_VALUE_LOCATION" ]]; then
      URL_PARAM=""
      if [[ "$GITLAB_TOKEN" ]]; then
        URL_PARAM="?private_token=$GITLAB_TOKEN"
      fi
      curl -o value_file.yaml ${DEPLOYMENT_VALUE_LOCATION}/${DEPLOYMENT_VALUE_FILE}${URL_PARAM}
      VALUE_OPTION="-f value_file.yaml"
    else
      VALUE_OPTION="-f $DEPLOYMENT_VALUE_FILE"
    fi
  fi

  CHART_VERION=""
  if [[ "$DEPLOYMENT_CHART_VERION" ]]; then
    CHART_VERION="--version $DEPLOYMENT_CHART_VERION"
  fi

  DEBUG=""
  if [[ "$CI_DEBUG_TRACE" != "false" && ! -z "$CI_DEBUG_TRACE" ]]; then
    DEBUG="--debug"
  fi

  # we need to pass all environment variables to helm. Before that,
  # we convert __ back to . as dot is not allowed for environment variable names.
  # we also need to quote the variables that has = in the value.
  # And in the end, join them with comma as specified in helm --set parameter
  ENV_VARS=$(echo "" | awk 'BEGIN {ORS=","}; {split("CI_BUILD_TOKEN CI_REGISTRY_PASSWORD CI_REGISTRY_USER DEPLOYMENT_KEY PRIVATE_TOKEN CI_COMMIT_TITLE CI_COMMIT_MESSAGE CI_COMMIT_DESCRIPTION CI_PROJECT_REPOSITORY_LANGUAGES", va); for (i in va) excluded[va[i]];  for (i in ENVIRON) { if (i in excluded) { continue;  }; c=i; gsub("__", ".", c); if (index(ENVIRON[i], "=")) { v = "'\''"ENVIRON[i]"'\''"  } else { v = ENVIRON[i]  };  print c "=" v  }}')

  if [[ "$DEBUG" ]]; then
    echo $ENV_VARS
  fi

  # remove --wait for now and tiller tends to disconnect when installing
  helm upgrade --install --recreate-pods --reset-values $CHART_VERION --namespace $KUBE_NAMESPACE $VALUE_OPTION --set "$ENV_VARS" $DEBUG $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG $DEPLOYMENT_MANIFEST
else
  echo 'Please specify $DEPLOYMENT_MANIFEST for deployment.'
  exit 1
fi

echo "Application is accessible at: ${CI_ENVIRONMENT_URL}"
echo ""
